trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

steps:
- task: NodeTool@0
  inputs:
    versionSpec: '10.x'
  displayName: 'Install Node.js'

- script: |
    npm install -g @angular/cli
    npm install
    ng build --prod  
  displayName: 'Build'

- script: |
    npm run test-ci   
    ls /coverage
    ls     
  displayName: 'pruebas unitarias'

- task: SonarCloudPrepare@1
  displayName: 'Preparar analysis Sonar'
  inputs:
    SonarCloud: 'sonar-cloud'
    scannerMode: 'CLI'
    organization: 'londono652'

- task: SonarCloudAnalyze@1
  displayName: 'Correr Analisis de Codigo estatico'

- task: SonarCloudPublish@1
  inputs:
    pollingTimeoutSec: '300'

- task: sonarcloud-buildbreaker@2
  inputs:
    SonarCloud: 'sonar-cloud'
    organization: 'londono652'

- task: ArchiveFiles@2
  inputs:
    rootFolderOrFile: 'dist'
    includeRootFolder: true
    archiveType: 'zip'
    archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
    replaceExistingArchive: true

- task: PublishBuildArtifacts@1

- task: S3Upload@1
  inputs:
    awsCredentials: 'awsconection'
    regionName: 'us-east-1'
    bucketName: 'jlondono-petbook'
    sourceFolder: '$(Build.ArtifactStagingDirectory)'
    globExpressions: '*.zip'
    targetFolder: 'artefactos'
    createBucket: true
- task: Docker@2
  inputs:
    containerRegistry: 'dockerhub'
    repository: 'petbook'
    command: 'buildAndPush'
    Dockerfile: '**/Dockerfile'